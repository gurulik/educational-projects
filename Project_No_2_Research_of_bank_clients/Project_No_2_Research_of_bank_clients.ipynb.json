{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "4964e828",
   "metadata": {},
   "source": [
    "# Исследование надежности заемщиков."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aa30423f",
   "metadata": {},
   "source": [
    "\n",
    "Целью данного исследования является проанализировать статистику платежеспособности клиентов банка, чтобы определить их надежность для целей создания кредитного скоринга. Для этого необходимо решить следующие задачи:\n",
    "    \n",
    "1) изучить данные и и специфику;\n",
    "    \n",
    "2) осуществить их предварительную обработку для того, чтобы результаты анализа отражали реальные закономерности, а не искаженные вследствие наличия в данных неточностей или ошибок;\n",
    "    \n",
    "3) проанализировать подготовленные данные, чтобы ответить на следующие вопросы:\n",
    "    \n",
    "-Есть ли зависимость между количеством детей и возвратом кредита в срок?\n",
    "    \n",
    "-Есть ли зависимость между семейным положением и возвратом кредита в срок?\n",
    "    \n",
    "-Есть ли зависимость между уровнем дохода и возвратом кредита в срок?\n",
    "    \n",
    "-Как разные цели кредита влияют на его возврат в срок?</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91ece125",
   "metadata": {},
   "source": [
    "### Шаг 1. Обзор данных"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 256,
   "id": "35c8ff4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "436b5c5f",
   "metadata": {},
   "source": [
    "читаем файл с данными:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 257,
   "id": "5e300dd4",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = pd.read_csv('/datasets/data.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f28f3dfe",
   "metadata": {},
   "source": [
    "проверяем наличие и количество пропущенных значений:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 258,
   "id": "4abaa916",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   children          21525 non-null  int64  \n",
      " 1   days_employed     19351 non-null  float64\n",
      " 2   dob_years         21525 non-null  int64  \n",
      " 3   education         21525 non-null  object \n",
      " 4   education_id      21525 non-null  int64  \n",
      " 5   family_status     21525 non-null  object \n",
      " 6   family_status_id  21525 non-null  int64  \n",
      " 7   gender            21525 non-null  object \n",
      " 8   income_type       21525 non-null  object \n",
      " 9   debt              21525 non-null  int64  \n",
      " 10  total_income      19351 non-null  float64\n",
      " 11  purpose           21525 non-null  object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 2.0+ MB\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "children               0\n",
       "days_employed       2174\n",
       "dob_years              0\n",
       "education              0\n",
       "education_id           0\n",
       "family_status          0\n",
       "family_status_id       0\n",
       "gender                 0\n",
       "income_type            0\n",
       "debt                   0\n",
       "total_income        2174\n",
       "purpose                0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 258,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.info()\n",
    "data.isna().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "daf47cd8",
   "metadata": {},
   "source": [
    "### Шаг 2.1 Заполнение пропусков"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8e34f73",
   "metadata": {},
   "source": [
    "Прошлое действие помогло выявить пропуски в двух столбцах: \"days_employed\" и \"total_income\". \n",
    "Исходя из смысла данных столбцов, в них должна содержатся информация в формате количественных значений.\n",
    "Чтобы понять как исправить наличие пропусков нужно определить как их количество может повлиять на результат исследования.\n",
    "Для этого необходмо посчитать долю пропущенных значений в каждом из столбцов с пропусками:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 259,
   "id": "3a911445",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Доля пропущенных значений в столбце days_employed: 10.1%\n",
      "Доля пропущенных значений в столбце total_income: 10.1%\n"
     ]
    }
   ],
   "source": [
    "volume_missed_meanings_de = data[\"days_employed\"].isna().sum() / len(data[\"days_employed\"])\n",
    "print(\"Доля пропущенных значений в столбце days_employed: {:.1%}\".format(volume_missed_meanings_de))\n",
    "volume_missed_meanings_ti = data[\"total_income\"].isna().sum() / len(data[\"total_income\"])\n",
    "print(\"Доля пропущенных значений в столбце total_income: {:.1%}\".format(volume_missed_meanings_ti))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24044ef8",
   "metadata": {},
   "source": [
    "Получим что доля пропусков в каждом столбце составляет чуть больше 10%, это небольшой процент, но не ничтожный,поэтому им нельзя просто принебречь.\n",
    "Доля пропущенных значений одинакова в двух стлбцах, возможно это связано с технической ошибкой - нужно уточнить у поставщика данных возможные причины.\n",
    "Для начала нужно проверить данные на аномалии:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "46519e6d",
   "metadata": {},
   "source": [
    "### Шаг 2.2 Проверка данных на аномалии и исправления."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b52ed45",
   "metadata": {},
   "source": [
    "Проверим уникальные значения в числовых типах данных:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 260,
   "id": "7d981526",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-8437.67302776, -4024.80375385, -5623.42261023, ...,\n",
       "       -2113.3468877 , -3112.4817052 , -1984.50758853])"
      ]
     },
     "execution_count": 260,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['days_employed'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 261,
   "id": "79cb8308",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([253875.6394526 , 112080.01410244, 145885.95229686, ...,\n",
       "        89672.56115303, 244093.05050043,  82047.41889948])"
      ]
     },
     "execution_count": 261,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['total_income'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 262,
   "id": "78e654ac",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 1,  0,  3,  2, -1,  4, 20,  5])"
      ]
     },
     "execution_count": 262,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['children'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "id": "1b9f0948",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([42, 36, 33, 32, 53, 27, 43, 50, 35, 41, 40, 65, 54, 56, 26, 48, 24,\n",
       "       21, 57, 67, 28, 63, 62, 47, 34, 68, 25, 31, 30, 20, 49, 37, 45, 61,\n",
       "       64, 44, 52, 46, 23, 38, 39, 51,  0, 59, 29, 60, 55, 58, 71, 22, 73,\n",
       "       66, 69, 19, 72, 70, 74, 75])"
      ]
     },
     "execution_count": 263,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['dob_years'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b681cf8",
   "metadata": {},
   "source": [
    "Заменим отрицательные числа на положительные в стоблце стаж и количество детей - для этого создадим функцию:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 264,
   "id": "5f303943",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([8437.67302776, 4024.80375385, 5623.42261023, ..., 2113.3468877 ,\n",
       "       3112.4817052 , 1984.50758853])"
      ]
     },
     "execution_count": 264,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['days_employed'] = data['days_employed'].abs()\n",
    "data['children'] = data['children'].abs()\n",
    "data['days_employed'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "id": "2637d927",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 1,  0,  3,  2,  4, 20,  5])"
      ]
     },
     "execution_count": 265,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['children'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e78b9e9b",
   "metadata": {},
   "source": [
    "Учитывая колличественный тип данных в этих столбцах и их контекст, наиболее оптимальным способ исправить \n",
    "наличие пропусков в столбцах - это заполнить их медианным значением:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "id": "6f54d797",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['days_employed'] = data['days_employed'].fillna(data['days_employed'].median())\n",
    "data['total_income'] = data['total_income'].fillna(data['total_income'].median())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e814937",
   "metadata": {},
   "source": [
    "При проверке уникальных значений столбца children было замечено уникальное значение 20, предположительно это\n",
    "следствие человеческого фактора (опечатка), заменим его на медианное значение:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "id": "9e706aab",
   "metadata": {},
   "outputs": [],
   "source": [
    "children_median = data.loc[data.loc[:, 'children'] != 20]['children'].median()\n",
    "data['children'] = data['children'].replace(20, children_median)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c406be00",
   "metadata": {},
   "source": [
    "Убедимся что пропусков не осталось:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "id": "abf0ef8a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   children          21525 non-null  float64\n",
      " 1   days_employed     21525 non-null  float64\n",
      " 2   dob_years         21525 non-null  int64  \n",
      " 3   education         21525 non-null  object \n",
      " 4   education_id      21525 non-null  int64  \n",
      " 5   family_status     21525 non-null  object \n",
      " 6   family_status_id  21525 non-null  int64  \n",
      " 7   gender            21525 non-null  object \n",
      " 8   income_type       21525 non-null  object \n",
      " 9   debt              21525 non-null  int64  \n",
      " 10  total_income      21525 non-null  float64\n",
      " 11  purpose           21525 non-null  object \n",
      "dtypes: float64(3), int64(4), object(5)\n",
      "memory usage: 2.0+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02a4fc47",
   "metadata": {},
   "source": [
    "### Шаг 2.3. Изменение типов данных."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08c67db9",
   "metadata": {},
   "source": [
    "Из предыдущего действия мы видим, что некоторые столбцы имеют вещественный тип данных. Изменим его на целочисленный:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "id": "06e3c614",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['days_employed'] = data['days_employed'].astype('int')\n",
    "data['total_income'] = data['total_income'].astype('int')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "111cb5f7",
   "metadata": {},
   "source": [
    "Убедимся что тип данных изменился:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "id": "e83bef54",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 21525 entries, 0 to 21524\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   children          21525 non-null  float64\n",
      " 1   days_employed     21525 non-null  int64  \n",
      " 2   dob_years         21525 non-null  int64  \n",
      " 3   education         21525 non-null  object \n",
      " 4   education_id      21525 non-null  int64  \n",
      " 5   family_status     21525 non-null  object \n",
      " 6   family_status_id  21525 non-null  int64  \n",
      " 7   gender            21525 non-null  object \n",
      " 8   income_type       21525 non-null  object \n",
      " 9   debt              21525 non-null  int64  \n",
      " 10  total_income      21525 non-null  int64  \n",
      " 11  purpose           21525 non-null  object \n",
      "dtypes: float64(1), int64(6), object(5)\n",
      "memory usage: 2.0+ MB\n"
     ]
    }
   ],
   "source": [
    "data.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c208d05",
   "metadata": {},
   "source": [
    "### Шаг 2.4. Удаление дубликатов."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ea4069fe",
   "metadata": {},
   "source": [
    "Проверим данные на наличие неявных дубликатов в столбцах со строковыми значениями:\n",
    "- данные об образовании:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 274,
   "id": "31ca6df5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['высшее', 'среднее', 'Среднее', 'СРЕДНЕЕ', 'ВЫСШЕЕ',\n",
       "       'неоконченное высшее', 'начальное', 'Высшее',\n",
       "       'НЕОКОНЧЕННОЕ ВЫСШЕЕ', 'Неоконченное высшее', 'НАЧАЛЬНОЕ',\n",
       "       'Начальное', 'Ученая степень', 'УЧЕНАЯ СТЕПЕНЬ', 'ученая степень'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 274,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['education'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "375fa159",
   "metadata": {},
   "source": [
    "в столбце присутствуют данные, записанные разным регистром, исправим это:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "id": "2181e9f9",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['education'] = data['education'].str.lower()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "815164e3",
   "metadata": {},
   "source": [
    "- данные о семейном статусе:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 276,
   "id": "f99fd88b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['женат / замужем', 'гражданский брак', 'вдовец / вдова',\n",
       "       'в разводе', 'Не женат / не замужем'], dtype=object)"
      ]
     },
     "execution_count": 276,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['family_status'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4d7029c2",
   "metadata": {},
   "source": [
    "в столбце присутствуют данные, записанные разным регистром, исправим это:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "id": "547d1504",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['family_status'] = data['family_status'].str.lower()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9f9d0d72",
   "metadata": {},
   "source": [
    "- данные о гендерной принадлежности:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "id": "f74d783c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['F', 'M', 'XNA'], dtype=object)"
      ]
     },
     "execution_count": 278,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['gender'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8458027",
   "metadata": {},
   "source": [
    "обнаружен гендер XNA, проверим его количество:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "id": "4de6fa73",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "F      14236\n",
       "M       7288\n",
       "XNA        1\n",
       "Name: gender, dtype: int64"
      ]
     },
     "execution_count": 279,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['gender'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "723230fa",
   "metadata": {},
   "source": [
    "гендер XNA встречается 1 раз в стоблце, имеющем 21525 значений, и не влияет на результаты исследования.\n",
    "Предположительно в данном случае данные просто отсутствут в связи с человеческим фактором.\n",
    "- данные о типе дохода:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "id": "c684895a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['сотрудник', 'пенсионер', 'компаньон', 'госслужащий',\n",
       "       'безработный', 'предприниматель', 'студент', 'в декрете'],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 280,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['income_type'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6395b4bc",
   "metadata": {},
   "source": [
    "данные о типе дохода не содержат неявных дубликатов\n",
    "- данные о цели займа:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "id": "2348048a",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['покупка жилья', 'приобретение автомобиля',\n",
       "       'дополнительное образование', 'сыграть свадьбу',\n",
       "       'операции с жильем', 'образование', 'на проведение свадьбы',\n",
       "       'покупка жилья для семьи', 'покупка недвижимости',\n",
       "       'покупка коммерческой недвижимости', 'покупка жилой недвижимости',\n",
       "       'строительство собственной недвижимости', 'недвижимость',\n",
       "       'строительство недвижимости', 'на покупку подержанного автомобиля',\n",
       "       'на покупку своего автомобиля',\n",
       "       'операции с коммерческой недвижимостью',\n",
       "       'строительство жилой недвижимости', 'жилье',\n",
       "       'операции со своей недвижимостью', 'автомобили',\n",
       "       'заняться образованием', 'сделка с подержанным автомобилем',\n",
       "       'получение образования', 'автомобиль', 'свадьба',\n",
       "       'получение дополнительного образования', 'покупка своего жилья',\n",
       "       'операции с недвижимостью', 'получение высшего образования',\n",
       "       'свой автомобиль', 'сделка с автомобилем',\n",
       "       'профильное образование', 'высшее образование',\n",
       "       'покупка жилья для сдачи', 'на покупку автомобиля', 'ремонт жилью',\n",
       "       'заняться высшим образованием'], dtype=object)"
      ]
     },
     "execution_count": 281,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data['purpose'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6b1312b3",
   "metadata": {},
   "source": [
    "Исследуем данные на наличие дубликатов:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "id": "f06c29ed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "71"
      ]
     },
     "execution_count": 282,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eb89d581",
   "metadata": {},
   "source": [
    "данные содержат 71 явных дубликата. Удалим их, перезаписав индексы:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "id": "8fe20c19",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = data.drop_duplicates().reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa998960",
   "metadata": {},
   "source": [
    "проверим выполнение предыдщего действия:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "id": "14817a26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 284,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "30e7db56",
   "metadata": {},
   "source": [
    "### Шаг 2.5. Формирование дополнительных датафреймов словарей, декомпозиция исходного датафрейма."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c17f8015",
   "metadata": {},
   "source": [
    "Чтобы облегчить восприятие таблицы сформируем дополнительные датафреймы, соединяющие по смыслы id и значение \n",
    "в колонках образование и семейный статус:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "id": "deea3fae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>education</th>\n",
       "      <th>education_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>высшее</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>среднее</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>неоконченное высшее</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>начальное</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ученая степень</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             education  education_id\n",
       "0               высшее             0\n",
       "1              среднее             1\n",
       "2  неоконченное высшее             2\n",
       "3            начальное             3\n",
       "4       ученая степень             4"
      ]
     },
     "execution_count": 285,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "id_ed_meaning ={'education':data['education'].unique(), 'education_id':data['education_id'].unique()}\n",
    "id_fs_meaning ={'family_status':data['family_status'].unique(), 'family_status_id':data['family_status_id'].unique()}\n",
    "pd.DataFrame(id_ed_meaning)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 286,
   "id": "240788ee",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>вдовец / вдова</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>в разводе</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>не женат / не замужем</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           family_status  family_status_id\n",
       "0        женат / замужем                 0\n",
       "1       гражданский брак                 1\n",
       "2         вдовец / вдова                 2\n",
       "3              в разводе                 3\n",
       "4  не женат / не замужем                 4"
      ]
     },
     "execution_count": 286,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(id_fs_meaning)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d544c0c7",
   "metadata": {},
   "source": [
    "Удалим из основной таблицы стоблцы family_status и education:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 287,
   "id": "5db5fcd5",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>8437</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4024</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5623</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>4124</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>340266</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0       1.0           8437         42             0                 0      F   \n",
       "1       1.0           4024         36             1                 0      F   \n",
       "2       0.0           5623         33             1                 0      M   \n",
       "3       3.0           4124         32             1                 0      M   \n",
       "4       0.0         340266         53             1                 1      F   \n",
       "\n",
       "  income_type  debt  total_income                     purpose  \n",
       "0   сотрудник     0        253875               покупка жилья  \n",
       "1   сотрудник     0        112080     приобретение автомобиля  \n",
       "2   сотрудник     0        145885               покупка жилья  \n",
       "3   сотрудник     0        267628  дополнительное образование  \n",
       "4   пенсионер     0        158616             сыграть свадьбу  "
      ]
     },
     "execution_count": 287,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_simplif = data.drop(columns = ['education', 'family_status'], axis = 1)\n",
    "data_simplif.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d03c8d6",
   "metadata": {},
   "source": [
    "### Шаг 2.6. Категоризация дохода."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bd5caea3",
   "metadata": {},
   "source": [
    "Категоризируем доходы по их величине:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 288,
   "id": "ac0bc92e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>total_income_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>8437</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4024</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5623</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>4124</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>B</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>340266</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0       1.0           8437         42             0                 0      F   \n",
       "1       1.0           4024         36             1                 0      F   \n",
       "2       0.0           5623         33             1                 0      M   \n",
       "3       3.0           4124         32             1                 0      M   \n",
       "4       0.0         340266         53             1                 1      F   \n",
       "\n",
       "  income_type  debt  total_income                     purpose  \\\n",
       "0   сотрудник     0        253875               покупка жилья   \n",
       "1   сотрудник     0        112080     приобретение автомобиля   \n",
       "2   сотрудник     0        145885               покупка жилья   \n",
       "3   сотрудник     0        267628  дополнительное образование   \n",
       "4   пенсионер     0        158616             сыграть свадьбу   \n",
       "\n",
       "  total_income_category  \n",
       "0                     B  \n",
       "1                     C  \n",
       "2                     C  \n",
       "3                     B  \n",
       "4                     C  "
      ]
     },
     "execution_count": 288,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def total_income_categoriser(income_value):\n",
    "    if income_value >= 0:\n",
    "        if income_value <= 30000:\n",
    "            return 'E'\n",
    "    if income_value >= 30001:\n",
    "        if income_value <= 50000:\n",
    "            return 'D'\n",
    "    if income_value >= 50001:\n",
    "        if income_value <= 200000:\n",
    "            return 'C'\n",
    "    if income_value >= 200001:\n",
    "        if income_value <= 1000000:\n",
    "            return 'B'\n",
    "    return 'A'\n",
    "data_simplif['total_income_category'] = data_simplif['total_income'].apply(total_income_categoriser)\n",
    "data_simplif.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c34ee367",
   "metadata": {},
   "source": [
    "### Шаг 2.7. Категоризация целей кредита."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6139a667",
   "metadata": {},
   "source": [
    "Категоризируем данные по цели кредита. Исходя из данных шага 2.4 мы видим, что цели кредита содержит множество схожих значений,\n",
    "совпадающих по смыслу. Их необходимо лемматизировать:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "id": "ca03fe0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from pymystem3 import Mystem\n",
    "m = Mystem()\n",
    "\n",
    "def lemmas(purpose):\n",
    "    lemma = m.lemmatize(purpose)\n",
    "    return lemma"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8607f76b",
   "metadata": {},
   "source": [
    "создаем новый столбец со значением лемматизации колонки lemm_results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 290,
   "id": "cadef574",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>total_income_category</th>\n",
       "      <th>lemm_results</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>8437</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "      <td>[покупка,  , жилье, \\n]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4024</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>C</td>\n",
       "      <td>[приобретение,  , автомобиль, \\n]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5623</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>C</td>\n",
       "      <td>[покупка,  , жилье, \\n]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>4124</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>B</td>\n",
       "      <td>[дополнительный,  , образование, \\n]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>340266</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>C</td>\n",
       "      <td>[сыграть,  , свадьба, \\n]</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0       1.0           8437         42             0                 0      F   \n",
       "1       1.0           4024         36             1                 0      F   \n",
       "2       0.0           5623         33             1                 0      M   \n",
       "3       3.0           4124         32             1                 0      M   \n",
       "4       0.0         340266         53             1                 1      F   \n",
       "\n",
       "  income_type  debt  total_income                     purpose  \\\n",
       "0   сотрудник     0        253875               покупка жилья   \n",
       "1   сотрудник     0        112080     приобретение автомобиля   \n",
       "2   сотрудник     0        145885               покупка жилья   \n",
       "3   сотрудник     0        267628  дополнительное образование   \n",
       "4   пенсионер     0        158616             сыграть свадьбу   \n",
       "\n",
       "  total_income_category                          lemm_results  \n",
       "0                     B               [покупка,  , жилье, \\n]  \n",
       "1                     C     [приобретение,  , автомобиль, \\n]  \n",
       "2                     C               [покупка,  , жилье, \\n]  \n",
       "3                     B  [дополнительный,  , образование, \\n]  \n",
       "4                     C             [сыграть,  , свадьба, \\n]  "
      ]
     },
     "execution_count": 290,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_simplif['lemm_results'] = data_simplif['purpose'].apply(lemmas)\n",
    "data_simplif.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3e9e4ef",
   "metadata": {},
   "source": [
    "На основе лемматизации категоризируем значения цели кредита, создав специальную функцию:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 291,
   "id": "5418ba72",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>total_income_category</th>\n",
       "      <th>lemm_results</th>\n",
       "      <th>purpose_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>8437</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "      <td>[покупка,  , жилье, \\n]</td>\n",
       "      <td>операции с недвижимостью</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4024</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>C</td>\n",
       "      <td>[приобретение,  , автомобиль, \\n]</td>\n",
       "      <td>операции с автомобилем</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5623</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>C</td>\n",
       "      <td>[покупка,  , жилье, \\n]</td>\n",
       "      <td>операции с недвижимостью</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>4124</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>B</td>\n",
       "      <td>[дополнительный,  , образование, \\n]</td>\n",
       "      <td>получение образования</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>340266</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>C</td>\n",
       "      <td>[сыграть,  , свадьба, \\n]</td>\n",
       "      <td>проведение свадьбы</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0       1.0           8437         42             0                 0      F   \n",
       "1       1.0           4024         36             1                 0      F   \n",
       "2       0.0           5623         33             1                 0      M   \n",
       "3       3.0           4124         32             1                 0      M   \n",
       "4       0.0         340266         53             1                 1      F   \n",
       "\n",
       "  income_type  debt  total_income                     purpose  \\\n",
       "0   сотрудник     0        253875               покупка жилья   \n",
       "1   сотрудник     0        112080     приобретение автомобиля   \n",
       "2   сотрудник     0        145885               покупка жилья   \n",
       "3   сотрудник     0        267628  дополнительное образование   \n",
       "4   пенсионер     0        158616             сыграть свадьбу   \n",
       "\n",
       "  total_income_category                          lemm_results  \\\n",
       "0                     B               [покупка,  , жилье, \\n]   \n",
       "1                     C     [приобретение,  , автомобиль, \\n]   \n",
       "2                     C               [покупка,  , жилье, \\n]   \n",
       "3                     B  [дополнительный,  , образование, \\n]   \n",
       "4                     C             [сыграть,  , свадьба, \\n]   \n",
       "\n",
       "           purpose_category  \n",
       "0  операции с недвижимостью  \n",
       "1    операции с автомобилем  \n",
       "2  операции с недвижимостью  \n",
       "3     получение образования  \n",
       "4        проведение свадьбы  "
      ]
     },
     "execution_count": 291,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def lemm_results(rows):\n",
    "    if 'автомобиль' in rows:\n",
    "        return 'операции с автомобилем'\n",
    "    if 'свадьба' in rows:\n",
    "        return 'проведение свадьбы'  \n",
    "    if 'образование' in rows:\n",
    "        return 'получение образования'\n",
    "    if 'жилье' or 'недвижимость' in rows:\n",
    "        return 'операции с недвижимостью'   \n",
    "data_simplif['purpose_category'] = data_simplif['lemm_results'].apply(lemm_results)\n",
    "data_simplif.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7da5b05c",
   "metadata": {},
   "source": [
    "удалим рабочий столбец с результатами лемматизации:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "id": "8650641b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>children</th>\n",
       "      <th>days_employed</th>\n",
       "      <th>dob_years</th>\n",
       "      <th>education_id</th>\n",
       "      <th>family_status_id</th>\n",
       "      <th>gender</th>\n",
       "      <th>income_type</th>\n",
       "      <th>debt</th>\n",
       "      <th>total_income</th>\n",
       "      <th>purpose</th>\n",
       "      <th>total_income_category</th>\n",
       "      <th>purpose_category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1.0</td>\n",
       "      <td>8437</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>253875</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>B</td>\n",
       "      <td>операции с недвижимостью</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1.0</td>\n",
       "      <td>4024</td>\n",
       "      <td>36</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>F</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>112080</td>\n",
       "      <td>приобретение автомобиля</td>\n",
       "      <td>C</td>\n",
       "      <td>операции с автомобилем</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>5623</td>\n",
       "      <td>33</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>145885</td>\n",
       "      <td>покупка жилья</td>\n",
       "      <td>C</td>\n",
       "      <td>операции с недвижимостью</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.0</td>\n",
       "      <td>4124</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>M</td>\n",
       "      <td>сотрудник</td>\n",
       "      <td>0</td>\n",
       "      <td>267628</td>\n",
       "      <td>дополнительное образование</td>\n",
       "      <td>B</td>\n",
       "      <td>получение образования</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>340266</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>F</td>\n",
       "      <td>пенсионер</td>\n",
       "      <td>0</td>\n",
       "      <td>158616</td>\n",
       "      <td>сыграть свадьбу</td>\n",
       "      <td>C</td>\n",
       "      <td>проведение свадьбы</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   children  days_employed  dob_years  education_id  family_status_id gender  \\\n",
       "0       1.0           8437         42             0                 0      F   \n",
       "1       1.0           4024         36             1                 0      F   \n",
       "2       0.0           5623         33             1                 0      M   \n",
       "3       3.0           4124         32             1                 0      M   \n",
       "4       0.0         340266         53             1                 1      F   \n",
       "\n",
       "  income_type  debt  total_income                     purpose  \\\n",
       "0   сотрудник     0        253875               покупка жилья   \n",
       "1   сотрудник     0        112080     приобретение автомобиля   \n",
       "2   сотрудник     0        145885               покупка жилья   \n",
       "3   сотрудник     0        267628  дополнительное образование   \n",
       "4   пенсионер     0        158616             сыграть свадьбу   \n",
       "\n",
       "  total_income_category          purpose_category  \n",
       "0                     B  операции с недвижимостью  \n",
       "1                     C    операции с автомобилем  \n",
       "2                     C  операции с недвижимостью  \n",
       "3                     B     получение образования  \n",
       "4                     C        проведение свадьбы  "
      ]
     },
     "execution_count": 292,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_final = data_simplif.drop(columns = ['lemm_results'], axis = 1)\n",
    "data_final.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f771d3a",
   "metadata": {},
   "source": [
    "### Ответы на вопросы."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c423fc01",
   "metadata": {},
   "source": [
    "##### Вопрос 1:  Есть ли зависимость между количеством детей и возвратом кредита в срок?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58f5de8f",
   "metadata": {},
   "source": [
    "Для оценки имеющихся данных будет удобным использовать сводную таблицу:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "id": "23b606b1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.0</th>\n",
       "      <td>1071</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>445</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2.0</th>\n",
       "      <td>194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3.0</th>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4.0</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.0</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          debt\n",
       "children      \n",
       "0.0       1071\n",
       "1.0        445\n",
       "2.0        194\n",
       "3.0         27\n",
       "4.0          4\n",
       "5.0          0"
      ]
     },
     "execution_count": 293,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "children_debt = data_final.pivot_table(index = 'children', values = 'debt', aggfunc='sum')\n",
    "children_debt.sort_values(by = 'debt', ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "id": "6cbbed5c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>children</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0.0</th>\n",
       "      <td>1071</td>\n",
       "      <td>14167</td>\n",
       "      <td>0.075598</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1.0</th>\n",
       "      <td>445</td>\n",
       "      <td>4855</td>\n",
       "      <td>0.091658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2.0</th>\n",
       "      <td>194</td>\n",
       "      <td>2052</td>\n",
       "      <td>0.094542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3.0</th>\n",
       "      <td>27</td>\n",
       "      <td>330</td>\n",
       "      <td>0.081818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4.0</th>\n",
       "      <td>4</td>\n",
       "      <td>41</td>\n",
       "      <td>0.097561</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5.0</th>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           sum  count      mean\n",
       "          debt   debt      debt\n",
       "children                       \n",
       "0.0       1071  14167  0.075598\n",
       "1.0        445   4855  0.091658\n",
       "2.0        194   2052  0.094542\n",
       "3.0         27    330  0.081818\n",
       "4.0          4     41  0.097561\n",
       "5.0          0      9  0.000000"
      ]
     },
     "execution_count": 294,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "children_debt = data_final.pivot_table(index = 'children', values = 'debt', aggfunc=['sum','count','mean'])\n",
    "children_debt.sort_values(by = [('sum', 'debt')], ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "36d6ae15",
   "metadata": {},
   "source": [
    "##### Вывод 1: исходя из анализа данных, следует, что задолженность встречается чаще у заемщиков без детей. Однако если выделить долю наличия задолженности ко всему числу задолженности группе, мы увидим, что наиболее часто трудности с возвратом кредита в срок возникают у заемщиков с 4 детьми. В то же время наличие задолженности прямо не зависит от количества детей, поскольку мы видим, что у заемщиков с 3 детьми задолженность встречается реже, чем у заемщиков с 2 детьми."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a74c0eb",
   "metadata": {},
   "source": [
    "##### Вопрос 2: Есть ли зависимость между семейным положением и возвратом кредита в срок?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d78c03ef",
   "metadata": {},
   "source": [
    "Для оценки имеющихся данных будет удобным использовать сводную таблицу:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 295,
   "id": "25efc7d9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>family_status_id</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>388</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>274</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  debt\n",
       "family_status_id      \n",
       "0                  931\n",
       "1                  388\n",
       "4                  274\n",
       "3                   85\n",
       "2                   63"
      ]
     },
     "execution_count": 295,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "family_debt = data_final.pivot_table(index = 'family_status_id', values = 'debt', aggfunc='sum')\n",
    "family_debt_sorted = family_debt.sort_values(by = 'debt', ascending = False)\n",
    "family_debt_sorted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "id": "a00d4bfc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>family_status_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>931</td>\n",
       "      <td>12339</td>\n",
       "      <td>0.075452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>388</td>\n",
       "      <td>4151</td>\n",
       "      <td>0.093471</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>274</td>\n",
       "      <td>2810</td>\n",
       "      <td>0.097509</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>85</td>\n",
       "      <td>1195</td>\n",
       "      <td>0.071130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>63</td>\n",
       "      <td>959</td>\n",
       "      <td>0.065693</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  sum  count      mean\n",
       "                 debt   debt      debt\n",
       "family_status_id                      \n",
       "0                 931  12339  0.075452\n",
       "1                 388   4151  0.093471\n",
       "4                 274   2810  0.097509\n",
       "3                  85   1195  0.071130\n",
       "2                  63    959  0.065693"
      ]
     },
     "execution_count": 296,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "family_debt = data_final.pivot_table(index = 'family_status_id', values = 'debt', aggfunc=['sum','count','mean'])\n",
    "family_debt.sort_values(by = [('sum', 'debt')], ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 297,
   "id": "374061f2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>family_status</th>\n",
       "      <th>family_status_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>женат / замужем</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>гражданский брак</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>вдовец / вдова</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>в разводе</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>не женат / не замужем</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           family_status  family_status_id\n",
       "0        женат / замужем                 0\n",
       "1       гражданский брак                 1\n",
       "2         вдовец / вдова                 2\n",
       "3              в разводе                 3\n",
       "4  не женат / не замужем                 4"
      ]
     },
     "execution_count": 297,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(id_fs_meaning)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83708335",
   "metadata": {},
   "source": [
    "##### Вывод 2: исходя из анализа данных, вероятность наличия задолженности чаще встречается у заемщиков, имеющих семейный статус \"не женат/не замужем\", реже всего у  заемщиков, имеющих семейный статус \"вдовец/вдова\"."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbb9504d",
   "metadata": {},
   "source": [
    "##### Вопрос 3: Есть ли зависимость между уровнем дохода и возвратом кредита в срок? "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7450911c",
   "metadata": {},
   "source": [
    "Для оценки имеющихся данных будет удобным использовать сводную таблицу:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 298,
   "id": "b5367528",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_income_category</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>1360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E</th>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       debt\n",
       "total_income_category      \n",
       "C                      1360\n",
       "B                       356\n",
       "D                        21\n",
       "A                         2\n",
       "E                         2"
      ]
     },
     "execution_count": 298,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_income_category_debt = data_final.pivot_table(index = 'total_income_category', values = 'debt', aggfunc='sum')\n",
    "total_income_category_debt_sorted = total_income_category_debt.sort_values(by = 'debt', ascending = False)\n",
    "total_income_category_debt_sorted"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 299,
   "id": "1300c11b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>total_income_category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>C</th>\n",
       "      <td>1360</td>\n",
       "      <td>16016</td>\n",
       "      <td>0.084915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>B</th>\n",
       "      <td>356</td>\n",
       "      <td>5041</td>\n",
       "      <td>0.070621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>D</th>\n",
       "      <td>21</td>\n",
       "      <td>350</td>\n",
       "      <td>0.060000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>A</th>\n",
       "      <td>2</td>\n",
       "      <td>25</td>\n",
       "      <td>0.080000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>E</th>\n",
       "      <td>2</td>\n",
       "      <td>22</td>\n",
       "      <td>0.090909</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                        sum  count      mean\n",
       "                       debt   debt      debt\n",
       "total_income_category                       \n",
       "C                      1360  16016  0.084915\n",
       "B                       356   5041  0.070621\n",
       "D                        21    350  0.060000\n",
       "A                         2     25  0.080000\n",
       "E                         2     22  0.090909"
      ]
     },
     "execution_count": 299,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_income_category_debt = data_final.pivot_table(index = 'total_income_category', values = 'debt', aggfunc=['sum','count','mean'])\n",
    "total_income_category_debt_sorted = total_income_category_debt.sort_values(by = [('sum', 'debt')], ascending = False)\n",
    "total_income_category_debt_sorted"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bdbbfc32",
   "metadata": {},
   "source": [
    "##### Вывод 3: исходя из анализа данных, вероятность наличия задолженности чаще встречается у заемщиков, имеющих доходы категории \"E\" и \"C\", то есть доходы 0–30000 и 50001–200000 условных едениц, соответственно."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7e56cd48",
   "metadata": {},
   "source": [
    "##### Вопрос 4: Как разные цели кредита влияют на его возврат в срок?"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f8588e05",
   "metadata": {},
   "source": [
    "Для оценки имеющихся данных будет удобным использовать сводную таблицу:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 300,
   "id": "b19e209f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purpose_category</th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>операции с недвижимостью</th>\n",
       "      <td>782</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>операции с автомобилем</th>\n",
       "      <td>403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>получение образования</th>\n",
       "      <td>370</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>проведение свадьбы</th>\n",
       "      <td>186</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          debt\n",
       "purpose_category              \n",
       "операции с недвижимостью   782\n",
       "операции с автомобилем     403\n",
       "получение образования      370\n",
       "проведение свадьбы         186"
      ]
     },
     "execution_count": 300,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "purpose_category_debt = data_final.pivot_table(index = 'purpose_category', values = 'debt', aggfunc='sum')\n",
    "purpose_category_debt.sort_values(by = 'debt', ascending = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 301,
   "id": "22dc6abf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>sum</th>\n",
       "      <th>count</th>\n",
       "      <th>mean</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "      <th>debt</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>purpose_category</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>операции с недвижимостью</th>\n",
       "      <td>782</td>\n",
       "      <td>10811</td>\n",
       "      <td>0.072334</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>операции с автомобилем</th>\n",
       "      <td>403</td>\n",
       "      <td>4306</td>\n",
       "      <td>0.093590</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>получение образования</th>\n",
       "      <td>370</td>\n",
       "      <td>4013</td>\n",
       "      <td>0.092200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>проведение свадьбы</th>\n",
       "      <td>186</td>\n",
       "      <td>2324</td>\n",
       "      <td>0.080034</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                          sum  count      mean\n",
       "                         debt   debt      debt\n",
       "purpose_category                              \n",
       "операции с недвижимостью  782  10811  0.072334\n",
       "операции с автомобилем    403   4306  0.093590\n",
       "получение образования     370   4013  0.092200\n",
       "проведение свадьбы        186   2324  0.080034"
      ]
     },
     "execution_count": 301,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "purpose_category_debt = data_final.pivot_table(index = 'purpose_category', values = 'debt', aggfunc=['sum','count','mean'])\n",
    "purpose_category_debt.sort_values(by = [('sum', 'debt')], ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "40c30254",
   "metadata": {},
   "source": [
    "##### Вывод 4: исходя из анализа данных, вероятность наличия задолженности чаще встречается у заемщиков, берущих кредит на операции с автомобилем, реже у заемщиков, берущих кредит на операции с недвижимостью."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3971a648",
   "metadata": {},
   "source": [
    "## Общий вывод:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4510b057",
   "metadata": {},
   "source": [
    "#### Для подготовки анализа,  направленного на определение надежности заемщиков с точки зрения их платежеспособности, были предприняты следующие шаги:\n",
    "* 1. изучены данные о платежеспособности клиентов банка и их специфика, в результате чего были выявлены пропуски в двух столбцах: \"days_employed\" и \"total_income\";\n",
    "\n",
    "* 2. осуществили предварительную обработку данных для того, чтобы результаты анализа отражали реальные закономерности, а не искаженные вследствие наличия в данных неточностей или ошибок, в частности: были выявлены и устранены аномалии, связанные со значениями некоторых столбцов, заменены обнаруженные ранее пропуски, выявлены и удалены ненявные и явные дубликаты, осуществлена лемматизация и категоризация данных;\n",
    "\n",
    "* 3. перечисленные действия позволили нам произвести корректное построение сводных таблиц для определение доли искомых значений\n",
    "\n",
    "#### В результате чего удалось выявить следующие особенности:\n",
    "\n",
    "* Вероятность погашения кредита в срок напрямую не коррелирует с количеством детей, то есть не изменяется непосредственно в связи с изменением количества детей. Однако наиболее часто трудности с возвратом кредита в срок возникают у заемщиков с 4 детьми.\n",
    "* Вероятность наличия задолженности чаще встречается у заемщиков, имеющих семейный статус \"не женат/не замужем\".\n",
    "* Вероятность наличия задолженности чаще встречается у заемщиков, имеющих доходы категории \"E\" и \"C\", то есть доходы 0–30000 и 50001–200000 условных едениц, соответственно.\n",
    "* Вероятность наличия задолженности чаще встречается у заемщиков, берущих кредит на операции с автомобилем, реже у заемщиков, берущих кредит на операции с недвижимостью. Потенциально это может быть обусловлено наличием залога цели кредита в пользу банка, что непосредствено побуждает заемщиков, берущих кредит на операции с недвижимостью, к своевременному возрату кредита, поскольку для них риск потерять недвижимость будет болезненей нежели риск потерять автомобиль."
   ]
  }
 ],
 "metadata": {
  "ExecuteTimeLog": [
   {
    "duration": 757,
    "start_time": "2022-03-09T22:26:04.987Z"
   },
   {
    "duration": 69,
    "start_time": "2022-03-09T22:28:09.538Z"
   },
   {
    "duration": 64,
    "start_time": "2022-03-09T22:28:26.836Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-09T22:41:16.591Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-09T22:42:25.662Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-09T22:42:56.282Z"
   },
   {
    "duration": 84,
    "start_time": "2022-03-09T22:49:32.944Z"
   },
   {
    "duration": 82,
    "start_time": "2022-03-09T22:50:30.883Z"
   },
   {
    "duration": 84,
    "start_time": "2022-03-09T22:50:57.661Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-09T22:51:23.894Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-09T22:54:18.783Z"
   },
   {
    "duration": 114,
    "start_time": "2022-03-09T22:55:07.889Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-09T22:55:18.092Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-09T22:56:54.462Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-09T23:03:53.937Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-09T23:04:37.757Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-09T23:13:13.225Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-09T23:13:57.660Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-09T23:15:06.557Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-09T23:15:52.951Z"
   },
   {
    "duration": 72,
    "start_time": "2022-03-09T23:18:16.118Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-09T23:19:12.122Z"
   },
   {
    "duration": 279,
    "start_time": "2022-03-11T16:49:11.308Z"
   },
   {
    "duration": 620,
    "start_time": "2022-03-11T16:49:23.355Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-11T16:49:23.977Z"
   },
   {
    "duration": 66,
    "start_time": "2022-03-11T16:49:31.913Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-11T16:49:31.981Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-11T16:49:31.990Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-11T16:50:17.378Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-11T17:26:12.643Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-11T17:38:40.171Z"
   },
   {
    "duration": 65,
    "start_time": "2022-03-11T17:39:13.370Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-11T17:39:13.437Z"
   },
   {
    "duration": 60,
    "start_time": "2022-03-11T17:39:13.444Z"
   },
   {
    "duration": 35,
    "start_time": "2022-03-11T17:39:28.178Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-11T17:45:43.055Z"
   },
   {
    "duration": 64,
    "start_time": "2022-03-11T17:45:54.743Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-11T17:45:54.809Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-11T17:45:54.816Z"
   },
   {
    "duration": 65,
    "start_time": "2022-03-11T17:46:20.021Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-11T17:46:20.088Z"
   },
   {
    "duration": 32,
    "start_time": "2022-03-11T17:46:20.096Z"
   },
   {
    "duration": 331,
    "start_time": "2022-03-11T18:06:12.229Z"
   },
   {
    "duration": 65,
    "start_time": "2022-03-11T18:06:43.653Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-11T18:06:43.720Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-11T18:06:43.729Z"
   },
   {
    "duration": 68,
    "start_time": "2022-03-11T18:19:08.218Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-11T18:19:08.289Z"
   },
   {
    "duration": 66,
    "start_time": "2022-03-11T18:19:08.296Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-11T20:36:59.999Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-11T20:38:58.547Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-11T20:39:21.850Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-11T20:39:35.898Z"
   },
   {
    "duration": 65,
    "start_time": "2022-03-11T20:58:22.607Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-11T21:05:38.710Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-11T21:17:11.896Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-11T21:17:28.895Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-11T21:19:40.886Z"
   },
   {
    "duration": 46,
    "start_time": "2022-03-11T21:19:50.597Z"
   },
   {
    "duration": 307,
    "start_time": "2022-03-11T21:22:43.281Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-11T21:29:07.705Z"
   },
   {
    "duration": 31,
    "start_time": "2022-03-11T21:30:28.447Z"
   },
   {
    "duration": 44,
    "start_time": "2022-03-11T21:30:43.086Z"
   },
   {
    "duration": 41,
    "start_time": "2022-03-11T21:32:17.847Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-11T21:33:01.027Z"
   },
   {
    "duration": 70,
    "start_time": "2022-03-11T21:33:51.397Z"
   },
   {
    "duration": 48,
    "start_time": "2022-03-11T21:36:36.464Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-11T21:37:30.405Z"
   },
   {
    "duration": 52,
    "start_time": "2022-03-11T21:38:15.327Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-11T21:38:54.160Z"
   },
   {
    "duration": 51,
    "start_time": "2022-03-11T21:42:56.938Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-11T21:43:07.651Z"
   },
   {
    "duration": 55,
    "start_time": "2022-03-11T21:44:59.063Z"
   },
   {
    "duration": 78,
    "start_time": "2022-03-11T21:45:50.754Z"
   },
   {
    "duration": 69,
    "start_time": "2022-03-11T21:46:34.195Z"
   },
   {
    "duration": 311,
    "start_time": "2022-03-11T21:50:33.418Z"
   },
   {
    "duration": 285,
    "start_time": "2022-03-11T21:51:28.347Z"
   },
   {
    "duration": 76,
    "start_time": "2022-03-11T21:53:27.156Z"
   },
   {
    "duration": 78,
    "start_time": "2022-03-11T21:56:38.810Z"
   },
   {
    "duration": 87,
    "start_time": "2022-03-11T22:00:09.235Z"
   },
   {
    "duration": 81,
    "start_time": "2022-03-11T22:02:57.806Z"
   },
   {
    "duration": 63,
    "start_time": "2022-03-11T22:19:24.531Z"
   },
   {
    "duration": 68,
    "start_time": "2022-03-11T22:19:46.829Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-11T22:19:58.159Z"
   },
   {
    "duration": 229,
    "start_time": "2022-03-11T23:35:09.498Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-11T23:36:50.832Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-11T23:37:49.469Z"
   },
   {
    "duration": 74,
    "start_time": "2022-03-11T23:38:16.083Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-12T00:06:22.198Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-12T00:07:35.030Z"
   },
   {
    "duration": 250,
    "start_time": "2022-03-12T00:08:36.012Z"
   },
   {
    "duration": -169,
    "start_time": "2022-03-12T00:11:35.303Z"
   },
   {
    "duration": -159,
    "start_time": "2022-03-12T00:11:47.287Z"
   },
   {
    "duration": -80,
    "start_time": "2022-03-12T00:12:08.238Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-12T00:12:09.287Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-12T00:26:40.576Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T00:27:14.348Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T00:31:57.842Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T00:34:10.812Z"
   },
   {
    "duration": 64,
    "start_time": "2022-03-12T00:37:30.492Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-12T00:37:30.558Z"
   },
   {
    "duration": 60,
    "start_time": "2022-03-12T00:37:30.565Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-12T00:37:30.627Z"
   },
   {
    "duration": 84,
    "start_time": "2022-03-12T00:37:30.642Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-12T00:37:30.728Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T00:39:11.911Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T00:39:41.794Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-12T00:39:48.712Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-12T00:39:58.213Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-12T00:40:05.860Z"
   },
   {
    "duration": 208,
    "start_time": "2022-03-12T00:41:53.106Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T00:42:12.538Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-12T00:42:56.598Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-12T00:43:05.240Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-12T00:43:07.685Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-12T00:43:10.795Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-12T00:43:15.694Z"
   },
   {
    "duration": 2,
    "start_time": "2022-03-12T00:43:32.837Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-12T00:46:17.266Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-12T00:46:24.947Z"
   },
   {
    "duration": 221,
    "start_time": "2022-03-12T00:46:44.404Z"
   },
   {
    "duration": 233,
    "start_time": "2022-03-12T00:46:56.520Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-12T00:47:11.454Z"
   },
   {
    "duration": 72,
    "start_time": "2022-03-12T00:47:54.178Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-12T00:50:02.613Z"
   },
   {
    "duration": 69,
    "start_time": "2022-03-12T00:51:59.811Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-12T00:52:09.459Z"
   },
   {
    "duration": 225,
    "start_time": "2022-03-12T00:53:02.043Z"
   },
   {
    "duration": 73,
    "start_time": "2022-03-12T00:53:17.302Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-12T00:53:22.656Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T00:56:02.751Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-12T00:59:15.399Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T01:00:40.008Z"
   },
   {
    "duration": 242,
    "start_time": "2022-03-12T01:00:53.958Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-12T01:01:31.388Z"
   },
   {
    "duration": 224,
    "start_time": "2022-03-12T01:02:21.562Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-12T01:02:40.228Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T01:03:05.095Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-12T01:03:17.895Z"
   },
   {
    "duration": 243,
    "start_time": "2022-03-12T01:03:44.112Z"
   },
   {
    "duration": 242,
    "start_time": "2022-03-12T01:04:11.668Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-12T01:04:29.946Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-12T01:06:54.673Z"
   },
   {
    "duration": 288,
    "start_time": "2022-03-13T13:33:47.306Z"
   },
   {
    "duration": 717,
    "start_time": "2022-03-13T13:33:52.562Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T13:33:53.280Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-13T13:33:53.288Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T13:33:53.327Z"
   },
   {
    "duration": 90,
    "start_time": "2022-03-13T13:33:53.342Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-13T13:33:53.434Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T13:35:48.548Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-13T13:43:45.763Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-13T13:44:44.290Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-13T13:44:48.363Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-13T13:44:59.954Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-13T14:17:32.461Z"
   },
   {
    "duration": 14300,
    "start_time": "2022-03-13T14:42:28.301Z"
   },
   {
    "duration": 14490,
    "start_time": "2022-03-13T14:44:19.165Z"
   },
   {
    "duration": 14004,
    "start_time": "2022-03-13T14:44:34.475Z"
   },
   {
    "duration": 14399,
    "start_time": "2022-03-13T14:56:02.156Z"
   },
   {
    "duration": 3805,
    "start_time": "2022-03-13T15:31:49.731Z"
   },
   {
    "duration": 72,
    "start_time": "2022-03-13T15:32:49.489Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T15:32:49.563Z"
   },
   {
    "duration": 38,
    "start_time": "2022-03-13T15:32:49.570Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T15:32:49.610Z"
   },
   {
    "duration": 92,
    "start_time": "2022-03-13T15:32:49.626Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-13T15:32:49.720Z"
   },
   {
    "duration": 40,
    "start_time": "2022-03-13T15:32:49.752Z"
   },
   {
    "duration": 3821,
    "start_time": "2022-03-13T15:32:49.795Z"
   },
   {
    "duration": 10357,
    "start_time": "2022-03-13T15:41:06.554Z"
   },
   {
    "duration": 10002,
    "start_time": "2022-03-13T15:42:11.978Z"
   },
   {
    "duration": 3758,
    "start_time": "2022-03-13T15:43:05.404Z"
   },
   {
    "duration": 3940,
    "start_time": "2022-03-13T15:43:44.842Z"
   },
   {
    "duration": 4103,
    "start_time": "2022-03-13T15:46:57.764Z"
   },
   {
    "duration": 3774,
    "start_time": "2022-03-13T15:47:23.082Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-13T16:57:36.992Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T16:59:03.710Z"
   },
   {
    "duration": 253,
    "start_time": "2022-03-13T17:07:08.947Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-13T17:10:20.734Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T17:11:09.420Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T17:20:06.625Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T17:20:07.716Z"
   },
   {
    "duration": 2,
    "start_time": "2022-03-13T17:20:08.639Z"
   },
   {
    "duration": 2,
    "start_time": "2022-03-13T17:20:09.526Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T17:20:10.844Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T17:20:45.840Z"
   },
   {
    "duration": 256,
    "start_time": "2022-03-13T17:25:23.557Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T17:25:56.640Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-13T17:27:46.680Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T17:28:15.491Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-13T17:29:48.446Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-13T17:32:16.048Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T17:38:00.802Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T17:46:07.375Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-13T17:58:40.282Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T18:03:42.063Z"
   },
   {
    "duration": 3928,
    "start_time": "2022-03-13T18:05:12.272Z"
   },
   {
    "duration": 3619,
    "start_time": "2022-03-13T18:06:02.768Z"
   },
   {
    "duration": 3982,
    "start_time": "2022-03-13T18:07:28.932Z"
   },
   {
    "duration": 3806,
    "start_time": "2022-03-13T18:09:10.202Z"
   },
   {
    "duration": 84,
    "start_time": "2022-03-13T18:11:16.120Z"
   },
   {
    "duration": 90,
    "start_time": "2022-03-13T18:11:40.398Z"
   },
   {
    "duration": 3540,
    "start_time": "2022-03-13T18:12:11.611Z"
   },
   {
    "duration": 80,
    "start_time": "2022-03-13T18:12:46.835Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T18:12:46.917Z"
   },
   {
    "duration": 56,
    "start_time": "2022-03-13T18:12:46.925Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T18:12:46.983Z"
   },
   {
    "duration": 79,
    "start_time": "2022-03-13T18:12:47.000Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-13T18:12:47.081Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-13T18:12:47.108Z"
   },
   {
    "duration": 3730,
    "start_time": "2022-03-13T18:14:09.393Z"
   },
   {
    "duration": 3711,
    "start_time": "2022-03-13T18:15:29.055Z"
   },
   {
    "duration": 3722,
    "start_time": "2022-03-13T18:18:00.357Z"
   },
   {
    "duration": 70,
    "start_time": "2022-03-13T18:18:58.702Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T18:18:58.774Z"
   },
   {
    "duration": 56,
    "start_time": "2022-03-13T18:18:58.781Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-13T18:18:58.839Z"
   },
   {
    "duration": 71,
    "start_time": "2022-03-13T18:18:58.863Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-13T18:18:58.936Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-13T18:18:58.960Z"
   },
   {
    "duration": 85,
    "start_time": "2022-03-13T18:18:58.993Z"
   },
   {
    "duration": -42,
    "start_time": "2022-03-13T18:18:59.123Z"
   },
   {
    "duration": -44,
    "start_time": "2022-03-13T18:18:59.126Z"
   },
   {
    "duration": -43,
    "start_time": "2022-03-13T18:18:59.127Z"
   },
   {
    "duration": -43,
    "start_time": "2022-03-13T18:18:59.129Z"
   },
   {
    "duration": -44,
    "start_time": "2022-03-13T18:18:59.131Z"
   },
   {
    "duration": 70,
    "start_time": "2022-03-13T18:19:31.263Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T18:19:31.335Z"
   },
   {
    "duration": 56,
    "start_time": "2022-03-13T18:19:31.343Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T18:19:31.402Z"
   },
   {
    "duration": 87,
    "start_time": "2022-03-13T18:19:31.418Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-13T18:19:31.507Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-13T18:19:31.532Z"
   },
   {
    "duration": 101,
    "start_time": "2022-03-13T18:19:31.559Z"
   },
   {
    "duration": -38,
    "start_time": "2022-03-13T18:19:31.700Z"
   },
   {
    "duration": -39,
    "start_time": "2022-03-13T18:19:31.702Z"
   },
   {
    "duration": -40,
    "start_time": "2022-03-13T18:19:31.704Z"
   },
   {
    "duration": -41,
    "start_time": "2022-03-13T18:19:31.706Z"
   },
   {
    "duration": -42,
    "start_time": "2022-03-13T18:19:31.708Z"
   },
   {
    "duration": 93,
    "start_time": "2022-03-13T18:19:40.001Z"
   },
   {
    "duration": 3673,
    "start_time": "2022-03-13T18:19:47.658Z"
   },
   {
    "duration": 73,
    "start_time": "2022-03-13T18:20:04.180Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T18:20:04.255Z"
   },
   {
    "duration": 46,
    "start_time": "2022-03-13T18:20:04.276Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T18:20:04.324Z"
   },
   {
    "duration": 91,
    "start_time": "2022-03-13T18:20:04.340Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-13T18:20:04.433Z"
   },
   {
    "duration": 35,
    "start_time": "2022-03-13T18:20:04.461Z"
   },
   {
    "duration": 3698,
    "start_time": "2022-03-13T18:20:04.499Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T18:20:08.199Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-13T18:20:08.217Z"
   },
   {
    "duration": 38,
    "start_time": "2022-03-13T18:20:08.239Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-13T18:20:08.279Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-13T18:20:08.314Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T18:46:47.283Z"
   },
   {
    "duration": 93,
    "start_time": "2022-03-13T18:47:36.084Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-13T18:51:03.887Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-13T18:52:45.197Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-13T18:52:54.151Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-13T18:52:57.339Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T18:54:14.181Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-13T18:56:24.247Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-13T18:57:23.322Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T18:57:25.325Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-13T18:57:27.223Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T18:57:29.502Z"
   },
   {
    "duration": 92,
    "start_time": "2022-03-13T18:58:37.331Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-13T19:00:25.346Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:00:46.317Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:00:51.167Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:01:09.638Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T19:02:24.288Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T19:03:26.644Z"
   },
   {
    "duration": 71,
    "start_time": "2022-03-13T19:03:26.648Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:03:26.721Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:03:26.742Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-13T19:03:26.749Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:03:26.780Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:03:26.788Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-13T19:03:26.795Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-13T19:03:26.804Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:03:26.826Z"
   },
   {
    "duration": 45,
    "start_time": "2022-03-13T19:03:26.832Z"
   },
   {
    "duration": 121,
    "start_time": "2022-03-13T19:03:26.879Z"
   },
   {
    "duration": -42,
    "start_time": "2022-03-13T19:03:27.044Z"
   },
   {
    "duration": -48,
    "start_time": "2022-03-13T19:03:27.051Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T19:04:00.129Z"
   },
   {
    "duration": 59,
    "start_time": "2022-03-13T19:04:00.134Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:04:00.195Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-13T19:04:00.216Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-13T19:04:00.229Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-13T19:04:00.239Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-13T19:04:00.267Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-13T19:04:00.281Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-13T19:04:00.293Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:04:00.319Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-13T19:04:00.326Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-13T19:04:00.341Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T19:06:30.072Z"
   },
   {
    "duration": 72,
    "start_time": "2022-03-13T19:06:30.078Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-13T19:06:30.152Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:06:30.171Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-13T19:06:30.178Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-13T19:06:30.191Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T19:06:30.204Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T19:06:30.212Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-13T19:06:30.220Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:06:30.244Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-13T19:06:30.251Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-13T19:06:30.281Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T19:06:30.293Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-13T19:06:30.309Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T19:06:48.199Z"
   },
   {
    "duration": 55,
    "start_time": "2022-03-13T19:06:48.203Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:06:48.260Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:06:48.281Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-13T19:06:48.287Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-13T19:06:48.315Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-13T19:06:48.326Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-13T19:06:48.336Z"
   },
   {
    "duration": 34,
    "start_time": "2022-03-13T19:06:48.347Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:06:48.383Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-13T19:06:48.390Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-13T19:06:48.402Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-13T19:06:48.412Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:06:48.427Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T19:06:51.187Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T19:10:20.141Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-13T19:10:59.632Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T19:12:28.710Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T19:13:22.769Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-13T19:13:52.275Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T19:14:24.456Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T19:15:22.191Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T19:15:58.803Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-13T19:16:31.964Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:17:17.240Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-13T19:17:52.175Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-13T19:19:27.189Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-13T19:19:30.262Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T19:20:13.179Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-13T19:20:56.002Z"
   },
   {
    "duration": 28,
    "start_time": "2022-03-13T19:21:53.025Z"
   },
   {
    "duration": 3976,
    "start_time": "2022-03-13T19:22:17.132Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-13T19:23:39.176Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-13T19:24:13.921Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-13T19:24:32.180Z"
   },
   {
    "duration": 276,
    "start_time": "2022-03-13T19:24:32.185Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-13T19:24:32.463Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T19:24:32.485Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T19:24:32.503Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-13T19:24:32.521Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-13T19:24:32.547Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T19:24:32.572Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-13T19:24:32.591Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-13T19:24:32.643Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:24:32.654Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T19:24:32.675Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-13T19:24:32.693Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-13T19:24:32.708Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:24:32.727Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:24:32.748Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-13T19:24:32.769Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-13T19:24:32.789Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-13T19:24:32.807Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T19:24:32.814Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-13T19:24:32.831Z"
   },
   {
    "duration": 39,
    "start_time": "2022-03-13T19:24:32.841Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-13T19:24:32.883Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-13T19:24:32.891Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-13T19:24:32.903Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-13T19:24:32.916Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-13T19:24:32.924Z"
   },
   {
    "duration": 41,
    "start_time": "2022-03-13T19:24:32.943Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-13T19:24:32.986Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-13T19:24:33.005Z"
   },
   {
    "duration": 47,
    "start_time": "2022-03-13T19:24:33.031Z"
   },
   {
    "duration": 3840,
    "start_time": "2022-03-13T19:24:33.080Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-13T19:24:36.922Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-13T19:24:36.951Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-13T19:24:36.986Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-13T19:24:37.003Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-13T19:24:37.023Z"
   },
   {
    "duration": 32,
    "start_time": "2022-03-13T19:24:37.050Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-13T19:24:37.083Z"
   },
   {
    "duration": 201,
    "start_time": "2022-03-23T12:11:45.291Z"
   },
   {
    "duration": 210,
    "start_time": "2022-03-26T17:54:44.798Z"
   },
   {
    "duration": 65,
    "start_time": "2022-03-26T18:19:47.106Z"
   },
   {
    "duration": 497,
    "start_time": "2022-03-26T18:20:06.326Z"
   },
   {
    "duration": 74,
    "start_time": "2022-03-26T18:20:06.826Z"
   },
   {
    "duration": 51,
    "start_time": "2022-03-26T18:20:06.902Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T18:20:06.957Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-26T18:20:06.965Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T18:20:06.981Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T18:20:06.989Z"
   },
   {
    "duration": 48,
    "start_time": "2022-03-26T18:20:06.996Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T18:20:19.503Z"
   },
   {
    "duration": 76,
    "start_time": "2022-03-26T18:20:19.509Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-26T18:20:19.587Z"
   },
   {
    "duration": 28,
    "start_time": "2022-03-26T18:20:19.619Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T18:20:19.649Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T18:20:19.658Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T18:20:19.667Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T18:20:19.675Z"
   },
   {
    "duration": 64,
    "start_time": "2022-03-26T18:20:19.684Z"
   },
   {
    "duration": 215,
    "start_time": "2022-03-26T18:22:23.679Z"
   },
   {
    "duration": 484,
    "start_time": "2022-03-26T18:22:35.863Z"
   },
   {
    "duration": 192,
    "start_time": "2022-03-26T18:32:23.428Z"
   },
   {
    "duration": 183,
    "start_time": "2022-03-26T18:33:43.644Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-26T19:35:48.208Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:37:08.104Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:37:10.658Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:37:19.669Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-26T19:39:05.481Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T19:39:20.088Z"
   },
   {
    "duration": 86,
    "start_time": "2022-03-26T19:39:20.094Z"
   },
   {
    "duration": 31,
    "start_time": "2022-03-26T19:39:20.183Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-26T19:39:20.217Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-26T19:39:20.254Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-26T19:39:20.283Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T19:39:20.298Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-26T19:39:20.315Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-26T19:39:20.347Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:39:20.362Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-26T19:39:20.377Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-26T19:39:20.396Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-26T19:39:20.449Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:39:20.473Z"
   },
   {
    "duration": 34,
    "start_time": "2022-03-26T19:39:20.481Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T19:39:20.517Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T19:39:20.543Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-26T19:39:20.548Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-26T19:39:20.570Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-26T19:39:20.584Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:39:20.610Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-26T19:39:20.619Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-26T19:39:20.648Z"
   },
   {
    "duration": 13,
    "start_time": "2022-03-26T19:39:20.670Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-26T19:39:20.685Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-26T19:39:20.704Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-26T19:39:20.727Z"
   },
   {
    "duration": 31,
    "start_time": "2022-03-26T19:39:20.762Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T19:39:28.816Z"
   },
   {
    "duration": 77,
    "start_time": "2022-03-26T19:39:28.823Z"
   },
   {
    "duration": 52,
    "start_time": "2022-03-26T19:39:28.902Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:39:28.956Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:39:28.965Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:39:28.976Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T19:39:28.985Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:39:28.992Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-26T19:39:29.001Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:39:29.053Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:39:29.063Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-26T19:39:29.072Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-26T19:39:29.089Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:39:29.153Z"
   },
   {
    "duration": 20,
    "start_time": "2022-03-26T19:39:29.161Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T19:39:29.183Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T19:39:29.188Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T19:39:29.195Z"
   },
   {
    "duration": 45,
    "start_time": "2022-03-26T19:39:29.201Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-26T19:39:29.249Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T19:39:29.266Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-26T19:39:29.277Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:39:29.296Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-26T19:39:29.307Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:39:29.351Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T19:39:29.362Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-26T19:39:29.372Z"
   },
   {
    "duration": 67,
    "start_time": "2022-03-26T19:39:29.400Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-26T19:39:29.471Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T19:40:02.718Z"
   },
   {
    "duration": 88,
    "start_time": "2022-03-26T19:40:02.725Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-26T19:40:02.815Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:40:02.847Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:40:02.857Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T19:40:02.866Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-26T19:40:02.876Z"
   },
   {
    "duration": 55,
    "start_time": "2022-03-26T19:40:02.889Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T19:40:02.946Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:40:02.958Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:40:02.969Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T19:40:02.978Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-26T19:40:02.994Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:40:03.058Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-26T19:40:03.066Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T19:40:03.089Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T19:40:03.094Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T19:40:03.101Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T19:40:03.143Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T19:40:03.153Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-26T19:40:03.170Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-26T19:40:03.184Z"
   },
   {
    "duration": 41,
    "start_time": "2022-03-26T19:40:03.204Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-26T19:40:03.247Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-26T19:40:03.268Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:40:03.282Z"
   },
   {
    "duration": 68,
    "start_time": "2022-03-26T19:40:03.294Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-26T19:40:03.365Z"
   },
   {
    "duration": 52,
    "start_time": "2022-03-26T19:40:03.404Z"
   },
   {
    "duration": 271,
    "start_time": "2022-03-26T19:41:23.979Z"
   },
   {
    "duration": 192,
    "start_time": "2022-03-26T19:45:20.370Z"
   },
   {
    "duration": 41,
    "start_time": "2022-03-26T19:46:00.724Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-26T19:46:10.693Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T19:46:22.515Z"
   },
   {
    "duration": 103,
    "start_time": "2022-03-26T19:46:22.521Z"
   },
   {
    "duration": 40,
    "start_time": "2022-03-26T19:46:22.628Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T19:46:22.670Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-26T19:46:22.681Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:46:22.744Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:46:22.753Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:46:22.762Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T19:46:22.770Z"
   },
   {
    "duration": 64,
    "start_time": "2022-03-26T19:46:22.782Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:46:22.850Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T19:46:22.859Z"
   },
   {
    "duration": 22,
    "start_time": "2022-03-26T19:46:22.876Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:46:22.943Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-26T19:46:22.951Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T19:46:22.974Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:46:22.979Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T19:46:22.988Z"
   },
   {
    "duration": 54,
    "start_time": "2022-03-26T19:46:22.994Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T19:46:23.050Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:46:23.066Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-26T19:46:23.075Z"
   },
   {
    "duration": 51,
    "start_time": "2022-03-26T19:46:23.093Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:46:23.146Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:46:23.157Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T19:46:23.169Z"
   },
   {
    "duration": 83,
    "start_time": "2022-03-26T19:46:23.182Z"
   },
   {
    "duration": 28,
    "start_time": "2022-03-26T19:46:23.268Z"
   },
   {
    "duration": 54,
    "start_time": "2022-03-26T19:46:23.301Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-26T19:46:23.357Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T19:46:23.378Z"
   },
   {
    "duration": 58,
    "start_time": "2022-03-26T19:46:23.388Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:46:23.448Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T19:46:23.481Z"
   },
   {
    "duration": 5555,
    "start_time": "2022-03-26T19:46:23.491Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-26T19:46:29.048Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-26T19:46:29.083Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-26T19:46:29.111Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-26T19:46:29.164Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:47:35.348Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T19:47:47.236Z"
   },
   {
    "duration": 83,
    "start_time": "2022-03-26T19:47:47.241Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-26T19:47:47.327Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T19:47:47.372Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:47:47.383Z"
   },
   {
    "duration": 54,
    "start_time": "2022-03-26T19:47:47.394Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T19:47:47.450Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:47:47.458Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T19:47:47.467Z"
   },
   {
    "duration": 65,
    "start_time": "2022-03-26T19:47:47.479Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:47:47.548Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-26T19:47:47.559Z"
   },
   {
    "duration": 75,
    "start_time": "2022-03-26T19:47:47.578Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T19:47:47.655Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-26T19:47:47.663Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T19:47:47.686Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T19:47:47.742Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T19:47:47.748Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:47:47.755Z"
   },
   {
    "duration": 15,
    "start_time": "2022-03-26T19:47:47.766Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-26T19:47:47.783Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-26T19:47:47.848Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T19:47:47.866Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T19:47:47.875Z"
   },
   {
    "duration": 63,
    "start_time": "2022-03-26T19:47:47.886Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-26T19:47:47.952Z"
   },
   {
    "duration": 33,
    "start_time": "2022-03-26T19:47:47.967Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:47:48.043Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-26T19:47:48.078Z"
   },
   {
    "duration": 53,
    "start_time": "2022-03-26T19:47:48.107Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-26T19:47:48.163Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-26T19:47:48.178Z"
   },
   {
    "duration": 69,
    "start_time": "2022-03-26T19:47:48.206Z"
   },
   {
    "duration": 36,
    "start_time": "2022-03-26T19:47:48.278Z"
   },
   {
    "duration": 5401,
    "start_time": "2022-03-26T19:47:48.317Z"
   },
   {
    "duration": 51,
    "start_time": "2022-03-26T19:47:53.721Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-26T19:47:53.774Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-26T19:47:53.806Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:47:53.858Z"
   },
   {
    "duration": 39,
    "start_time": "2022-03-26T19:48:22.980Z"
   },
   {
    "duration": 200,
    "start_time": "2022-03-26T19:50:25.271Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T19:51:21.977Z"
   },
   {
    "duration": 36,
    "start_time": "2022-03-26T19:51:34.376Z"
   },
   {
    "duration": 45,
    "start_time": "2022-03-26T19:52:35.851Z"
   },
   {
    "duration": 39,
    "start_time": "2022-03-26T19:56:43.603Z"
   },
   {
    "duration": 43,
    "start_time": "2022-03-26T20:02:01.040Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-26T20:02:19.535Z"
   },
   {
    "duration": 40,
    "start_time": "2022-03-26T20:02:27.353Z"
   },
   {
    "duration": 38,
    "start_time": "2022-03-26T20:03:15.353Z"
   },
   {
    "duration": 45,
    "start_time": "2022-03-26T20:05:34.980Z"
   },
   {
    "duration": 48,
    "start_time": "2022-03-26T20:07:52.167Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T20:08:08.186Z"
   },
   {
    "duration": 80,
    "start_time": "2022-03-26T20:08:08.192Z"
   },
   {
    "duration": 30,
    "start_time": "2022-03-26T20:08:08.275Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-26T20:08:08.308Z"
   },
   {
    "duration": 12,
    "start_time": "2022-03-26T20:08:08.349Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T20:08:08.364Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T20:08:08.373Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T20:08:08.381Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T20:08:08.443Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T20:08:08.455Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T20:08:08.465Z"
   },
   {
    "duration": 69,
    "start_time": "2022-03-26T20:08:08.476Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-26T20:08:08.547Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T20:08:08.570Z"
   },
   {
    "duration": 19,
    "start_time": "2022-03-26T20:08:08.579Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-26T20:08:08.601Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T20:08:08.645Z"
   },
   {
    "duration": 4,
    "start_time": "2022-03-26T20:08:08.650Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T20:08:08.656Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T20:08:08.668Z"
   },
   {
    "duration": 57,
    "start_time": "2022-03-26T20:08:08.685Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-26T20:08:08.744Z"
   },
   {
    "duration": 8,
    "start_time": "2022-03-26T20:08:08.763Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T20:08:08.774Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T20:08:08.785Z"
   },
   {
    "duration": 55,
    "start_time": "2022-03-26T20:08:08.796Z"
   },
   {
    "duration": 29,
    "start_time": "2022-03-26T20:08:08.853Z"
   },
   {
    "duration": 73,
    "start_time": "2022-03-26T20:08:08.884Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-26T20:08:08.961Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-26T20:08:08.989Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-26T20:08:09.008Z"
   },
   {
    "duration": 17,
    "start_time": "2022-03-26T20:08:09.048Z"
   },
   {
    "duration": 31,
    "start_time": "2022-03-26T20:08:09.067Z"
   },
   {
    "duration": 64,
    "start_time": "2022-03-26T20:08:09.100Z"
   },
   {
    "duration": 4458,
    "start_time": "2022-03-26T20:08:09.166Z"
   },
   {
    "duration": 47,
    "start_time": "2022-03-26T20:08:13.628Z"
   },
   {
    "duration": 24,
    "start_time": "2022-03-26T20:08:13.677Z"
   },
   {
    "duration": 55,
    "start_time": "2022-03-26T20:08:13.703Z"
   },
   {
    "duration": 39,
    "start_time": "2022-03-26T20:08:13.761Z"
   },
   {
    "duration": 51,
    "start_time": "2022-03-26T20:08:13.802Z"
   },
   {
    "duration": 37,
    "start_time": "2022-03-26T20:08:13.856Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T20:08:13.896Z"
   },
   {
    "duration": 57,
    "start_time": "2022-03-26T20:08:13.908Z"
   },
   {
    "duration": 44,
    "start_time": "2022-03-26T20:08:13.967Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-26T20:08:14.044Z"
   },
   {
    "duration": 84,
    "start_time": "2022-03-26T20:08:14.070Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T21:03:55.127Z"
   },
   {
    "duration": 82,
    "start_time": "2022-03-26T21:03:55.133Z"
   },
   {
    "duration": 47,
    "start_time": "2022-03-26T21:03:55.217Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T21:03:55.266Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T21:03:55.276Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T21:03:55.288Z"
   },
   {
    "duration": 6,
    "start_time": "2022-03-26T21:03:55.343Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T21:03:55.351Z"
   },
   {
    "duration": 9,
    "start_time": "2022-03-26T21:03:55.363Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T21:03:55.374Z"
   },
   {
    "duration": 62,
    "start_time": "2022-03-26T21:03:55.385Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-26T21:03:55.449Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-26T21:03:55.467Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T21:03:55.493Z"
   },
   {
    "duration": 25,
    "start_time": "2022-03-26T21:03:55.543Z"
   },
   {
    "duration": 3,
    "start_time": "2022-03-26T21:03:55.571Z"
   },
   {
    "duration": 7,
    "start_time": "2022-03-26T21:03:55.576Z"
   },
   {
    "duration": 5,
    "start_time": "2022-03-26T21:03:55.585Z"
   },
   {
    "duration": 52,
    "start_time": "2022-03-26T21:03:55.592Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T21:03:55.646Z"
   },
   {
    "duration": 21,
    "start_time": "2022-03-26T21:03:55.662Z"
   },
   {
    "duration": 35,
    "start_time": "2022-03-26T21:03:55.685Z"
   },
   {
    "duration": 26,
    "start_time": "2022-03-26T21:03:55.722Z"
   },
   {
    "duration": 14,
    "start_time": "2022-03-26T21:03:55.751Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-26T21:03:55.767Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-26T21:03:55.787Z"
   },
   {
    "duration": 61,
    "start_time": "2022-03-26T21:03:55.800Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-26T21:03:55.864Z"
   },
   {
    "duration": 51,
    "start_time": "2022-03-26T21:03:55.896Z"
   },
   {
    "duration": 16,
    "start_time": "2022-03-26T21:03:55.950Z"
   },
   {
    "duration": 10,
    "start_time": "2022-03-26T21:03:55.968Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-26T21:03:55.980Z"
   },
   {
    "duration": 71,
    "start_time": "2022-03-26T21:03:56.000Z"
   },
   {
    "duration": 27,
    "start_time": "2022-03-26T21:03:56.073Z"
   },
   {
    "duration": 4701,
    "start_time": "2022-03-26T21:03:56.102Z"
   },
   {
    "duration": 54,
    "start_time": "2022-03-26T21:04:00.806Z"
   },
   {
    "duration": 23,
    "start_time": "2022-03-26T21:04:00.862Z"
   },
   {
    "duration": 55,
    "start_time": "2022-03-26T21:04:00.888Z"
   },
   {
    "duration": 41,
    "start_time": "2022-03-26T21:04:00.945Z"
   },
   {
    "duration": 18,
    "start_time": "2022-03-26T21:04:00.988Z"
   },
   {
    "duration": 70,
    "start_time": "2022-03-26T21:04:01.009Z"
   },
   {
    "duration": 11,
    "start_time": "2022-03-26T21:04:01.081Z"
   },
   {
    "duration": 65,
    "start_time": "2022-03-26T21:04:01.094Z"
   },
   {
    "duration": 50,
    "start_time": "2022-03-26T21:04:01.161Z"
   },
   {
    "duration": 42,
    "start_time": "2022-03-26T21:04:01.213Z"
   },
   {
    "duration": 47,
    "start_time": "2022-03-26T21:04:01.257Z"
   }
  ],
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": true,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
